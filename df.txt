const create_account = async (req: any) => {
    try {
        let CustomerData, fields, files;
        //@ts-ignore
        ({ fields, files } = await new Promise((resolve) => {
            new formidable.IncomingForm().parse(req, async (err: any, fields: any, files: any) => {
                resolve({ fields: fields, files: files });
            })
        }));
        // @ts-ignore
        let hash = await new Hashing().generateHash(fields.password, 10);
        let Customers: any = {};

        if (fields.full_name == undefined || fields.full_name == null || fields.full_name == "") throw new Error("mobile is required");
        Customers.full_name = fields.full_name;

        if (fields.email == undefined || fields.email == null || fields.email == "") throw new Error("email required");
        Customers.email = fields.email;

        if (fields.password == undefined || fields.password == null || fields.password == "") throw new Error("password required");
        Customers.password = hash;
        console.log('password--', fields.password, hash)
        CustomerData = await new WorkspaceModel().create_account(fields.email, hash, fields.full_name)
        if (!CustomerData) throw Error("failed to create customer")
        return { userId: CustomerData.insertId, message: "Account created successfully" }
    } catch (e: any) {
        LOGGER.info("Exception =>", e.message);
        throw e;
    }
}